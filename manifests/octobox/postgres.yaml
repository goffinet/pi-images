apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: octobox
  name: postgresql
  labels:
    app: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      # https://hub.docker.com/_/postgres/
      - name: postgresql
        image: postgres:alpine
        args:
        - -c
        - authentication_timeout=15s
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql-storage
        # ports:
        # - name: postgres
        #   containerPort: 5432
        #   protocol: TCP
        # - name: metrics
        #   containerPort: 9187
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: PG_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --username postgres --host $POD_IP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --username postgres --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
      volumes:
      - name: postgresql-storage
        nfs:
          server: 192.168.2.41
          path: /data/postgres
---
apiVersion: v1
kind: Service
metadata:
  namespace: octobox
  name: postgresql
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgresql
  # type: LoadBalancer
